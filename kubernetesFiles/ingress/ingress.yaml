apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: k8s-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    #nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    #nginx.ingress.kubernetes.io/proxy-ssl-secret: cert 
spec:
  rules:
  - http:
      paths:
        - path: /api-rest
          pathType: Prefix
          backend:
            service:
              name: api-rest
              port: 
                number: 8080
        - path: /auth
          pathType: Prefix
          backend:
            service:
              name: auth
              port: 
                number: 8081
        - path: /northbound
          pathType: Prefix
          backend:
            service:
              name: node-red
              port: 
                number: 1880
---
#HAY QUE MDIFICAR ESTAS LINEAS EN /snap/microk8s/(NUM)/action/ingress.yaml

# #the name of the configmap is obtained from the microk8s ingress controller
# #This allow us to pass tcp traffic through the Ingress
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: nginx-ingress-tcp-microk8s-conf
#   namespace: ingress
# data:
#   8083: "default/mosquitto-broker:1883"
# ---
# #We obtaine this DaemonSet from the microk8s ingress controller too
# apiVersion: apps/v1
# kind: DaemonSet
# metadata:
#   name: nginx-ingress-microk8s-controller
#   namespace: ingress
# spec:
#   selector:
#     matchLabels:
#       name: nginx-ingress-microk8s-controller
#   template:
#     metadata:
#       labels:
#         name: nginx-ingress-microk8s-controller
#     spec:
#       containers:
#       - name: nginx-ingress-microk8s
#         ports:
#         - containerPort: 80
#         - containerPort: 443
#         - name: prxy-tcp-8083
#           containerPort: 8083
#           hostPort: 1883
#           protocol: TCP
