[{"id":"1763a520.cec113","type":"tab","label":"Flow 1","disabled":false,"info":""},{"id":"ee2552c8.780278","type":"MySQLdatabase","name":"mysql-read","host":"mysql-read.default.svc.cluster.local","port":"3306","db":"test","tz":"GTM+1","charset":"latin1_swedish_ci"},{"id":"5f7e35da.4be3b4","type":"Context-Broker","name":"orion","endpoint":"http://orion.default.svc.cluster.local","service":"","idmEndpoint":""},{"id":"3037fbc1.91dc94","type":"http request","z":"1763a520.cec113","name":"","method":"GET","ret":"obj","paytoqs":"ignore","url":"http://orion.default.svc.cluster.local:1026/v2/entities?limit=1000","tls":"","persist":false,"proxy":"","authType":"","x":390,"y":300,"wires":[["f2153a6a.4af59"]]},{"id":"713cf313.cf7ab4","type":"inject","z":"1763a520.cec113","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":180,"y":300,"wires":[["3037fbc1.91dc94"]]},{"id":"f2153a6a.4af59","type":"debug","z":"1763a520.cec113","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":580,"y":300,"wires":[]},{"id":"10d29fa9.97b3f8","type":"http request","z":"1763a520.cec113","name":"","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://orion.default.svc.cluster.local:1026/v2/entities","tls":"","persist":false,"proxy":"","authType":"","x":550,"y":360,"wires":[["cd8bb224.c498c8"]]},{"id":"33f5f3a7.33a7b4","type":"inject","z":"1763a520.cec113","name":"","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"Room1","payloadType":"str","x":170,"y":360,"wires":[["5badb9e6.6a0018"]]},{"id":"cd8bb224.c498c8","type":"debug","z":"1763a520.cec113","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":710,"y":360,"wires":[]},{"id":"5badb9e6.6a0018","type":"function","z":"1763a520.cec113","name":"","func":"\nmsg.payload={\"id\":\"Room1\",\n    \"type\":\"Room\",\n    \"temperature\":{\"value\":23,\"type\":\"Float\"},\n    \"pressure\":{\"value\":720,\"type\":\"Integer\"}\n}\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":340,"y":360,"wires":[["10d29fa9.97b3f8"]]},{"id":"30c43599.b708f2","type":"inject","z":"1763a520.cec113","name":"Person","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"Person","payloadType":"str","x":170,"y":420,"wires":[["d4c66e61.a141b8"]]},{"id":"d4c66e61.a141b8","type":"function","z":"1763a520.cec113","name":"","func":"\nmsg.payload={\n    \"id\":\"Persona1\",\n    \"type\":\"Persona\",\n    \"nombre\":{\n        \"type\":\"String\",\n        \"value\":\"Manuel Ruiz Ruiz\"},\n    \"edad\":{\n        \"type\":\"Integer\",\n        \"value\":21},\n    \"lat\":{\n        \"type\":\"Float\",\n        \"value\":1234},\n    \"lon\":{\n        \"type\":\"Float\",\n        \"value\":5678},\n    \"profesion\":{\n        \"type\":\"String\",\n        \"value\":\"estudiante\"},\n    \"sueldo\":{\n        \"type\":\"Float\",\n        \"value\":0},\n    \"pulso\":{\n        \"type\":\"Float\",\n        \"value\":60},\n    \"temperatura\":{\n        \"type\":\"Float\",\n        \"value\":30},\n    \"enfermedad\":{\n        \"type\":\"String\",\n        \"value\":\"sano\"},\n    }\n    \n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":340,"y":420,"wires":[["10d29fa9.97b3f8"]]},{"id":"25d7322a.765a3e","type":"http in","z":"1763a520.cec113","name":"GET /fiware","url":"/fiware","method":"get","upload":false,"swaggerDoc":"","x":150,"y":600,"wires":[["29b97053.020988"]]},{"id":"6b67090f.977778","type":"comment","z":"1763a520.cec113","name":"FIWARE","info":"","x":140,"y":520,"wires":[]},{"id":"10d39919.8fdc2f","type":"http response","z":"1763a520.cec113","name":"","statusCode":"","headers":{},"x":510,"y":600,"wires":[]},{"id":"bd884a9a.4061b","type":"http in","z":"1763a520.cec113","name":"POST /fiware","url":"/fiware","method":"post","upload":false,"swaggerDoc":"","x":150,"y":780,"wires":[["a2088a4d.b6627"]]},{"id":"c16aa707.09cc","type":"http response","z":"1763a520.cec113","name":"","statusCode":"","headers":{},"x":1070,"y":940,"wires":[]},{"id":"c3055bc1.67fdd8","type":"http request","z":"1763a520.cec113","name":"GET to api-rest","method":"GET","ret":"obj","paytoqs":"ignore","url":"https://api-rest.default.svc.cluster.local:8080/?{{{parsedQuery}}}","tls":"","persist":false,"proxy":"","authType":"","x":600,"y":780,"wires":[["aa5ada7c.0a18c8"]]},{"id":"a2088a4d.b6627","type":"function","z":"1763a520.cec113","name":"parse parameters","func":"msg.parsedQuery=\"\"\n\nfor (const key in msg.req.body){\n    msg.parsedQuery=msg.parsedQuery+key+\"=\"+msg.req.body[key]+\"&\"\n}\n\nconsole.log(msg.parsedQuery)\n\nreturn msg;\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":370,"y":780,"wires":[["c3055bc1.67fdd8"]]},{"id":"8a019f3e.ac4038","type":"function","z":"1763a520.cec113","name":"parse to fiware entities","func":"var apirest = global.get(\"api-rest\");\n\n//Comprobamos si la respuesta ha tenido exito o nos ha devuelto un fallo\nif(apirest === 'string'){\n    //La respuesta ha fallado, devolvemos respuesta\n    return msg\n}\n\n//Comprobamos que tipo de datos se han devuelto\n//Dividimos las entidades en 3 tipos, Person, AnonPerson, GroupOfPeople\n\nvar tipo;\n\nif(apirest[0].hasOwnProperty('count')){\n    //Se han devuelto grupos de personas\n    tipo = 'GroupOfPeople'\n    \n}else if(apirest[0].hasOwnProperty('nombre')){\n    //Se ha devuelto Person o AnonPerson\n    \n    if(apirest[0].nombre == '*'){\n        //se ha devuelto persona anonimizada\n        tipo = 'AnonPerson'\n    }else{\n        //se ha devuelto persona\n        tipo = 'Person'\n    }\n}\n\n//Creamos las entidades a partir del json recibido\n\nvar array = []\nvar truePayload = apirest\nvar key, keyj;\n\nswitch (tipo) {\n  case 'Person':\n    for (key in truePayload)\n        {\n        \n        for(keyj in truePayload[key])\n        {\n            truePayload[key][keyj] = {\n                type: typeof truePayload[key][keyj],\n                value:truePayload[key][keyj]}\n                \n        }\n        \n        delete truePayload[key].id\n\n\n        truePayload[key].type = 'Person'\n        truePayload[key].id = 'Person'+key\n        //Tendriamos que arreglar el id de alguna forma\n       \n       array.push(truePayload[key])\n    }\n      \n    break;\n    \n  case 'AnonPerson':\n      \n    for (key in truePayload)\n        {\n        \n        for(keyj in truePayload[key])\n        {\n            truePayload[key][keyj] = {\n                type: typeof truePayload[key][keyj],\n                value:truePayload[key][keyj]}\n            \n        }\n        \n        truePayload[key].type = 'AnonPerson'\n        truePayload[key].id = 'AnonPerson'+key\n        //Tendriamos que arreglar el id de alguna forma\n       \n       array.push(truePayload[key])\n    }\n      \n    break;\n    \n  case 'GroupOfPeople':\n      \n    for (key in truePayload)\n    {\n        \n        for(keyj in truePayload[key])\n        {\n            truePayload[key][keyj] = {\n                type: typeof truePayload[key][keyj],\n                value:truePayload[key][keyj]}\n            \n        }\n        \n        truePayload[key].type = 'GroupOfPeople'\n        truePayload[key].id = 'GroupOfPeople'+key\n        //Tendriamos que arreglar el id de alguna forma\n       \n       array.push(truePayload[key])\n    }\n      \n    break;\n    \n  default:\n    break;\n}\n\nanswer = {\"actionType\": \"APPEND\",\n  \"entities\": array}\n\nmsg.payload = answer;\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":460,"y":940,"wires":[["119fe11b.7de647"]]},{"id":"119fe11b.7de647","type":"http request","z":"1763a520.cec113","name":"POST to orion","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://orion.default.svc.cluster.local:1026/v2/op/update","tls":"","persist":false,"proxy":"","authType":"","x":680,"y":940,"wires":[["ebabd2f3.064ff"]]},{"id":"3973fadb.841136","type":"http request","z":"1763a520.cec113","name":"Delete entities (POST)","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://orion.default.svc.cluster.local:1026/v2/op/update","tls":"","persist":false,"proxy":"","authType":"","x":820,"y":860,"wires":[[]]},{"id":"2361db4e.978dcc","type":"complete","z":"1763a520.cec113","name":"when set global.api-rest","scope":["aa5ada7c.0a18c8"],"uncaught":false,"x":180,"y":860,"wires":[["c364f91a.b266c"]]},{"id":"aa5ada7c.0a18c8","type":"function","z":"1763a520.cec113","name":"set global.api-rest","func":"\nglobal.set('api-rest', msg.payload)\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":850,"y":780,"wires":[[]]},{"id":"b5d82bbc.c9eb78","type":"complete","z":"1763a520.cec113","name":"when deleted entities (POST)","scope":["3973fadb.841136"],"uncaught":false,"x":200,"y":940,"wires":[["8a019f3e.ac4038"]]},{"id":"ebabd2f3.064ff","type":"function","z":"1763a520.cec113","name":"","func":"\nif(msg.payload == \"\" && msg.statusCode == 204){\n    msg.payload = \"La subida se ha realizado con exito\"\n    msg.headers = {\"connection\": \"close\",\n                    \"content-length\": \"60\",\n                    \"content-type\": \"text/html\"}\n    msg.statusCode = 200;\n}\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":900,"y":940,"wires":[["c16aa707.09cc"]]},{"id":"8eed0ea1.97d4e8","type":"http in","z":"1763a520.cec113","name":"DELETE /fiware","url":"/fiware","method":"delete","upload":false,"swaggerDoc":"","x":160,"y":680,"wires":[["c39ae739.13f708"]]},{"id":"3d97981.5192d68","type":"function","z":"1763a520.cec113","name":"delete entities","func":"entities=[]\n\nmsg.payload.forEach(element =>{\n    entities.push({\n        \"id\":element.id\n    })\n})\n\n/*answer = {\"actionType\": \"DELETE\",\n  //\"idPattern\":\"^\"+tipo+\"[0-9]+\",\n    \"entities\":[{\n        //\"id\":\"Person0\"\n        \"id\":\"Person1\",\n        \"type\":\"Person\"\n    }]\n}*/\n\nanswer = {\n    \"actionType\": \"DELETE\",\n    \"entities\":entities\n}\n\nmsg.payload = answer\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":580,"y":680,"wires":[["45291dbf.3f057c"]]},{"id":"d8b9bdb4.1ab348","type":"http response","z":"1763a520.cec113","name":"","statusCode":"","headers":{},"x":1050,"y":680,"wires":[]},{"id":"45291dbf.3f057c","type":"http request","z":"1763a520.cec113","name":"Delete entities (DELETE)","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://orion.default.svc.cluster.local:1026/v2/op/update","tls":"","persist":false,"proxy":"","authType":"","x":830,"y":680,"wires":[["d8b9bdb4.1ab348"]]},{"id":"29b97053.020988","type":"http request","z":"1763a520.cec113","name":"GET to orion","method":"GET","ret":"obj","paytoqs":"ignore","url":"http://orion.default.svc.cluster.local:1026/v2/entities?limit=1000","tls":"","persist":false,"proxy":"","authType":"","x":330,"y":600,"wires":[["10d39919.8fdc2f"]]},{"id":"c39ae739.13f708","type":"http request","z":"1763a520.cec113","name":"GET to orion","method":"GET","ret":"obj","paytoqs":"ignore","url":"http://orion.default.svc.cluster.local:1026/v2/entities?limit=1000","tls":"","persist":false,"proxy":"","authType":"","x":370,"y":680,"wires":[["3d97981.5192d68"]]},{"id":"c364f91a.b266c","type":"http request","z":"1763a520.cec113","name":"GET to orion","method":"GET","ret":"obj","paytoqs":"ignore","url":"http://orion.default.svc.cluster.local:1026/v2/entities?limit=1000","tls":"","persist":false,"proxy":"","authType":"","x":390,"y":860,"wires":[["1132ac08.88ec84"]]},{"id":"1132ac08.88ec84","type":"function","z":"1763a520.cec113","name":"delete entities","func":"var apirest = global.get(\"api-rest\");\n\n//Comprobamos si la respuesta ha tenido exito o nos ha devuelto un fallo\nif(apirest === 'string'){\n    //La respuesta ha fallado, devolvemos respuesta\n    return msg\n}\n\n//Comprobamos que tipo de datos se han devuelto\n//Dividimos las entidades en 3 tipos, Person, AnonPerson, GroupOfPeople\n\nvar tipo;\n\nif(apirest[0].hasOwnProperty('count')){\n    //Se han devuelto grupos de personas\n    tipo = 'GroupOfPeople'\n    \n}else if(apirest[0].hasOwnProperty('nombre')){\n    //Se ha devuelto Person o AnonPerson\n    \n    if(apirest[0].nombre == '*'){\n        //se ha devuelto persona anonimizada\n        tipo = 'AnonPerson'\n    }else{\n        //se ha devuelto persona\n        tipo = 'Person'\n    }\n}\n\nentities=[]\n\nmsg.payload.forEach(element =>{\n    //Si el tipo conicide con las que vamos a subir, borramos\n    if(element.type == tipo){\n        entities.push({\n        \"id\":element.id\n        })\n    }\n    \n})\n\n/*answer = {\"actionType\": \"DELETE\",\n  //\"idPattern\":\"^\"+tipo+\"[0-9]+\",\n    \"entities\":[{\n        //\"id\":\"Person0\"\n        \"id\":\"Person1\",\n        \"type\":\"Person\"\n    }]\n}*/\n\nanswer = {\n    \"actionType\": \"DELETE\",\n    \"entities\":entities\n}\n\nmsg.payload = answer\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":580,"y":860,"wires":[["3973fadb.841136"]]}]